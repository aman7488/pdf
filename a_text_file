import React, { useState } from "react";
import {
  Dialog,
  DialogTitle,
  DialogContent,
  DialogActions,
  Button,
  FormControlLabel,
  Checkbox,
  FormGroup,
} from "@mui/material";
import * as XLSX from "xlsx";

const DownloadDialog = ({ open, onClose, data, columnFields }) => {
  const [selectedColumns, setSelectedColumns] = useState(columnFields);

  const toggleColumn = (column) => {
    setSelectedColumns((prev) =>
      prev.includes(column)
        ? prev.filter((col) => col !== column)
        : [...prev, column]
    );
  };

  const handleSelectAll = () => {
    setSelectedColumns(columnFields);
  };

  const handleDownload = () => {
    const reducedData = data.map((row) =>
      selectedColumns.reduce((acc, col) => {
        acc[col] = row[col];
        return acc;
      }, {})
    );

    const worksheet = XLSX.utils.json_to_sheet(reducedData);
    const workbook = XLSX.utils.book_new();
    XLSX.utils.book_append_sheet(workbook, worksheet, "Sheet1");
    XLSX.writeFile(workbook, "DVP_Trade_Volumes_Selected_Columns.xlsx");
    onClose();
  };

  return (
    <Dialog open={open} onClose={onClose} maxWidth="sm" fullWidth>
      <DialogTitle>Select Columns to Download</DialogTitle>
      <DialogContent dividers>
        <FormGroup>
          {columnFields.map((field) => (
            <FormControlLabel
              key={field}
              control={
                <Checkbox
                  checked={selectedColumns.includes(field)}
                  onChange={() => toggleColumn(field)}
                />
              }
              label={field}
            />
          ))}
        </FormGroup>
      </DialogContent>
      <DialogActions>
        <Button onClick={handleSelectAll}>Select All</Button>
        <Button onClick={onClose}>Cancel</Button>
        <Button onClick={handleDownload} variant="contained" color="primary">
          Download
        </Button>
      </DialogActions>
    </Dialog>
  );
};

export default DownloadDialog;





const [isDownloadDialogOpen, setIsDownloadDialogOpen] = useState(false);

import DownloadDialog from "./DownloadDialog";

<Button
  startIcon={<DownloadIcon />}
  variant="outlined"
  onClick={() => setIsDownloadDialogOpen(true)}
>
  Download Datasheet
</Button>

<DownloadDialog
  open={isDownloadDialogOpen}
  onClose={() => setIsDownloadDialogOpen(false)}
  data={filteredData}
  columnFields={columnFields}
/>
